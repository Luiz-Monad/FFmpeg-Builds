name: Test Full Build

on:
  pull_request:
    branches:
      - master
    
    paths-ignore:
      - '**.md'
      - 'LICENSE'

env:
  DOCKER_BUILDKIT: 1

jobs:
  build:
    name: Test Full Build
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        combo:
          - { host: macos, target: aarch64-ios-clang }
          - { host: macos, target: aarch64-ios-xcode }
          - { host: macos, target: aarch64-macos-clang }
          - { host: macos, target: aarch64-macos-xcode }
          - { host: macos, target: x86_64-macos-clang }
          - { host: macos, target: x86_64-macos-xcode }
          - { host: linux, target: aarch64-android-clang }
          - { host: linux, target: aarch64-ios-cross-clang }
          - { host: linux, target: aarch64-linux-clang }
          - { host: linux, target: aarch64-linux-gcc }
          - { host: linux, target: aarch64-macos-cross-clang }
          - { host: linux, target: aarch64-windows-cross-clang }
          - { host: linux, target: armv7-android-clang }
          - { host: linux, target: armv7-linux-clang }
          - { host: linux, target: armv7-linux-gcc }
          - { host: linux, target: x86_64-android-clang }
          - { host: linux, target: x86_64-linux-clang }
          - { host: linux, target: x86_64-linux-gcc }
          - { host: linux, target: x86_64-macos-cross-clang }
          - { host: linux, target: x86_64-windows-cross-clang }
          - { host: windows, target: aarch64-windows-clang }
          - { host: windows, target: aarch64-windows-msvc }
          - { host: windows, target: x86_64-windows-clang }
          - { host: windows, target: x86_64-windows-msvc }
        variant:
          - gpl 7.1.1
          - lgpl 7.1.1
          - shared 7.1.1
          - static 7.1.1
        quickbuild: [1]
        include:
          - combo: { host: linux, target: aarch64-macos-cross-clang }
            variant: gpl 7.1.1
            quickbuild: ''
          - combo: { host: linux, target: aarch64-linux-clang }
            variant: gpl 7.1.1
            quickbuild: ''
          - combo: { host: linux, target: x86_64-windows-cross-clang }
            variant: gpl 7.1.1
            quickbuild: ''

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Free Disk-Space
        run: ./util/free_disk.sh

      - name: Install buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config: .github/buildkit.toml
          driver: docker

      - name: Get download cache key
        id: dl_cache
        run: |
          echo "dltagname=$(./util/get_dl_cache_tag.sh)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache/restore@v4
        with:
          path: .cache/downloads
          key: download-cache-${{ steps.dl_cache.outputs.dltagname }}
          restore-keys: |
            download-cache-

      - name: Build Image
        run: ./makeimage.sh ${{ matrix.runner }} ${{ matrix.target }} ${{ matrix.variant }}
        env:
          QUICKBUILD: ${{ matrix.quickbuild }}

      - name: Build ffmpeg
        run: ./build.sh ${{ matrix.runner }} ${{ matrix.target }} ${{ matrix.variant }}
      - name: Replace spaces in string
        id: strs
        run: |
          SLUG="${{ matrix.target }}-${{ matrix.variant }}"
          echo "artifact_slug=${SLUG// /-}" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ steps.strs.outputs.artifact_slug }}
          overwrite: true
          path: artifacts/*
