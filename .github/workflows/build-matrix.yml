name: Build FFmpeg Matrix

on:
  schedule:
    - cron: "0 12 * * *"

  push:
    paths-ignore:
      - "**.md"
      - "LICENSE"

  workflow_dispatch:
    inputs:

      skipBase:
        description: 'Skip building base image'
        type: boolean

      skipRunner:
        description: 'Skip building runner image'
        type: boolean

      skipTargetBase:
        description: 'Skip building target base image'
        type: boolean

      skipTargetVariant:
        description: 'Skip building target variant image'
        type: boolean

      skipFFmpeg:
        description: 'Skip building ffmpeg'
        type: boolean

      doRelease:
        description: "Publish new release"
        type: boolean

      debug:
        description: "Run with debug"
        type: boolean

jobs:
  setup:
    name: Setup Build Matrix
    runs-on: linux
    outputs:
      json: ${{ steps.set_matrix.outputs.json }}
    steps:
      - name: Set Matrix
        id: set_matrix
        run: echo "json=$(echo "$DATA" | yq -o=json -I=0 '.')" >> $GITHUB_OUTPUT
        env:
          DATA: >-
            targets:
              # - { host: macos, target: aarch64-ios-clang }
              # - { host: macos, target: aarch64-ios-xcode }
              # - { host: macos, target: aarch64-macos-clang }
              # - { host: macos, target: aarch64-macos-xcode }
              # - { host: macos, target: x86_64-macos-clang }
              # - { host: macos, target: x86_64-macos-xcode }
              - { host: linux, target: aarch64-android-cross-clang }
              - { host: linux, target: aarch64-ios-cross-clang }
              - { host: linux, target: aarch64-linux-clang }
              - { host: linux, target: aarch64-linux-gcc }
              - { host: linux, target: aarch64-macos-cross-clang }
              - { host: linux, target: aarch64-windows-cross-clang }
              - { host: linux, target: armv7-android-cross-clang }
              - { host: linux, target: armv7-linux-clang }
              - { host: linux, target: armv7-linux-gcc }
              - { host: linux, target: x86_64-android-cross-clang }
              - { host: linux, target: x86_64-linux-clang }
              - { host: linux, target: x86_64-linux-gcc }
              - { host: linux, target: x86_64-macos-cross-clang }
              # - { host: linux, target: x86_64-windows-cross-clang }
              # - { host: windows, target: aarch64-windows-clang }
              # - { host: windows, target: aarch64-windows-msvc }
              # - { host: windows, target: x86_64-windows-clang }
              # - { host: windows, target: x86_64-windows-msvc }

            runners:
              # - { host: macos }
              - { host: linux }
              # - { host: windows }

            variants:
              # - gpl 7.1.1
              # - lgpl 7.1.1
              # - shared 7.1.1
              - static 7.1.1

  prepare:
    name: Prepare
    needs: [setup]
    runs-on: linux
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  build_base:
    name: Build Basics
    needs: [setup, prepare]
    strategy:
      fail-fast: false
      matrix:
        target:
          - base
    uses: ./.github/workflows/build-step.yml
    secrets: inherit
    with:
      buildBase: ${{ !inputs.skipBase }}
      runner: linux

  build_runners:
    name: Build Runners
    needs: [setup, build_base]
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.json).runners }}
    uses: ./.github/workflows/build-step.yml
    secrets: inherit
    with:
      buildRunner: ${{ !inputs.skipRunner }}
      runner: ${{ matrix.target.host }}
      host: ${{ matrix.target.host }}

  build_targets:
    name: Build Targets
    needs: [setup, build_runners]
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.json).targets }}
    uses: ./.github/workflows/build-step.yml
    secrets: inherit
    with:
      buildTargetBase: ${{ !inputs.skipTargetBase }}
      runner: ${{ matrix.target.host }}
      host: ${{ matrix.target.host }}
      target: ${{ matrix.target.target }}
      variant: base

  build_target_variants:
    name: Build Target Variants
    needs: [setup, build_targets]
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.json).targets }}
        variant: ${{ fromJSON(needs.setup.outputs.json).variants }}
    uses: ./.github/workflows/build-step.yml
    secrets: inherit
    with:
      buildTargetVariant: ${{ !inputs.skipTargetVariant }}
      runner: ${{ matrix.target.host }}
      host: ${{ matrix.target.host }}
      target: ${{ matrix.target.target }}
      variant: ${{ matrix.variant }}

  build_ffmpeg:
    name: Build FFmpeg Variants
    needs: [setup, build_target_variants]
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.json).targets }}
        variant: ${{ fromJSON(needs.setup.outputs.json).variants }}
    uses: ./.github/workflows/build-step.yml
    secrets: inherit
    with:
      buildFFmpeg: ${{ !inputs.skipFFmpeg }}
      publishRelease: ${{ github.event_name == 'schedule' || github.event.inputs.doRelease }}
      runner: ${{ matrix.target.host }}
      host: ${{ matrix.target.host }}
      target: ${{ matrix.target.target }}
      variant: ${{ matrix.variant }}
