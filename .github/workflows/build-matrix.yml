name: Build FFmpeg Matrix

on:
  schedule:
    - cron: "0 12 * * *"

  push:
    paths-ignore:
      - "**.md"
      - "LICENSE"

  workflow_dispatch:
    inputs:
      doRelease:
        description: "Publish new release"
        type: boolean
        default: false

      buildOnly:
        description: "Only build ffmpeg"
        type: boolean
        default: false

      debug:
        description: "Run with debug"
        required: false
        default: false
        type: boolean

jobs:
  prepare:
    name: Checkout
    runs-on: linux
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  build_runner_base:
    name: Build Runner Base
    needs: prepare
    uses: ./.github/workflows/build.yml
    if: ${{ github.event.inputs.buildOnly != 'true' }}
    with:
      buildBase: true
      buildTargetBase: false
      buildTargetVariant: false
      buildFFmpeg: false
      publishRelease: false
      runner: linux
      host: base
      target: base
      variant: base

  build_runners:
    name: Build Runners
    needs: build_runner_base
    strategy:
      fail-fast: false
      matrix:
        combo:
          # - { host: macos }
          - { host: linux }
          # - { host: windows }
    uses: ./.github/workflows/build.yml
    if: ${{ github.event.inputs.buildOnly != 'true' }}
    with:
      buildBase: true
      buildTargetBase: false
      buildTargetVariant: false
      buildFFmpeg: false
      publishRelease: false
      runner: ${{ matrix.combo.host }}
      host: ${{ matrix.combo.host }}
      target: base
      variant: base

  build_targets:
    name: Build Targets
    needs: build_runners
    strategy:
      fail-fast: false
      matrix:
        combo:
          # - { host: macos, target: aarch64-ios-clang }
          # - { host: macos, target: aarch64-ios-xcode }
          # - { host: macos, target: aarch64-macos-clang }
          # - { host: macos, target: aarch64-macos-xcode }
          # - { host: macos, target: x86_64-macos-clang }
          # - { host: macos, target: x86_64-macos-xcode }
          - { host: linux, target: aarch64-android-clang }
          - { host: linux, target: aarch64-ios-cross-clang }
          - { host: linux, target: aarch64-linux-clang }
          - { host: linux, target: aarch64-macos-cross-clang }
          - { host: linux, target: aarch64-windows-cross-clang }
          - { host: linux, target: armhf-linux-clang }
          - { host: linux, target: x86_64-android-clang }
          - { host: linux, target: x86_64-linux-clang }
          - { host: linux, target: x86_64-macos-cross-clang }
          - { host: linux, target: x86_64-windows-cross-clang }
          # - { host: windows, target: aarch64-windows-clang }
          # - { host: windows, target: aarch64-windows-msvc }
          # - { host: windows, target: x86_64-windows-clang }
          # - { host: windows, target: x86_64-windows-msvc }
    uses: ./.github/workflows/build.yml
    if: ${{ github.event.inputs.buildOnly != 'true' }}
    with:
      buildBase: false
      buildTargetBase: true
      buildTargetVariant: false
      buildFFmpeg: false
      publishRelease: false
      runner: ${{ matrix.combo.host }}
      host: ${{ matrix.combo.host }}
      target: ${{ matrix.combo.target }}
      variant: base

  build_target_variants:
    name: Build Target Variants
    needs: build_targets
    strategy:
      fail-fast: false
      matrix:
        combo: ${{ needs.build_targets.strategy.combo }}
        variant:
          - gpl 7.1.1
          - lgpl 7.1.1
          - shared 7.1.1
          - static 7.1.1
    uses: ./.github/workflows/build.yml
    if: ${{ github.event.inputs.buildOnly != 'true' }}
    with:
      buildBase: false
      buildTargetBase: false
      buildTargetVariant: ${{ github.event.inputs.buildOnly != 'true' }}
      buildFFmpeg: false
      publishRelease: false
      runner: ${{ matrix.combo.host }}
      host: ${{ matrix.combo.host }}
      target: ${{ matrix.combo.target }}
      variant: ${{ matrix.variant }}

  build_ffmpeg:
    name: Build FFmpeg Variants
    needs: build_target_variants
    strategy:
      fail-fast: false
      matrix:
        combo: ${{ needs.build_target_variants.strategy.combo }}
        variant: ${{ needs.build_target_variants.strategy.variant }}
    uses: ./.github/workflows/build.yml
    with:
      buildBase: false
      buildTargetBase: false
      buildTargetVariant: false
      buildFFmpeg: ${{ github.event.inputs.buildOnly == 'true' }}
      publishRelease: ${{ github.event_name == 'schedule' || github.event.inputs.doRelease }}
      runner: ${{ matrix.combo.host }}
      host: ${{ matrix.combo.host }}
      target: ${{ matrix.combo.target }}
      variant: ${{ matrix.variant }}
